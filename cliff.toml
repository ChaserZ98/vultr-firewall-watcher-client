# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration
[remote.github]
owner = "ChaserZ98"
repo = "vultr-firewall-watcher-client"

[changelog]
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% if version -%}
    ## {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{% endif -%}

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {%- for commit in commits | filter(attribute="merge_commit", value=false) %}
        - {{ commit.message | split(pat="\n") | first | upper_first | trim }}\
            {% if commit.remote.username %} by @{{ commit.remote.username }}{%- endif -%}
            {% if commit.remote.pr_number %} in \
            [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}) \
            {%- endif -%}
    {% endfor %}
{% endfor %}

{%- if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  ## ❤️ New Contributors
{%- endif -%}

{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor %}\n
"""
# template for the changelog footer
footer = """
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the templates
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    # remove issue numbers from commits
    { pattern = "\\(#([0-9]+)\\)", replace = "([#${1}](https://github.com/ChaserZ98/vultr-firewall-watcher-client/pull/${1}))" },
    { pattern = ' *(:\w+:|[\p{Emoji_Presentation}\p{Extended_Pictographic}](?:\u{FE0F})?\u{200D}?) *', replace = "" },
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^init", group = "<!-- 0 -->🎉 Hello World !" },
    { message = "^feat", group = "<!-- 1 -->✨ Feature" },
    { message = "^fix", group = "<!-- 2 -->🐞 Bug Fixes" },
    { message = "^docs", group = "<!-- 3 -->📃 Documentation" },
    { message = "^style", group = "<!-- 4 -->🌈 Styles" },
    { message = "^refactor", group = "<!-- 5 -->🦄 Refactor" },
    { message = "^perf", group = "<!-- 6 -->🎈 Performance" },
    { message = "^test", group = "<!-- 7 -->🧪 Tests" },
    { message = "^build", group = "<!-- 8 -->🔧 Build" },
    { message = "^ci", group = "<!-- 9 -->🐎 CI/CD" },
    { message = "^chore", group = "<!-- 10 -->🐳 Miscellaneous Tasks" },
    { message = "^revert", skip = true },
    { message = "^.*", group = "Changed" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
